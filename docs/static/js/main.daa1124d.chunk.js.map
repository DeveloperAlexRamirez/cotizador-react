{"version":3,"sources":["components/Header.js","helpers.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","calcularPlan","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daa1124d.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\n// styled component\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n \r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0px;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`; \r\n\r\nexport const Header = ({ titulo }) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{ titulo }</TextoHeader>\r\n        </ContenedorHeader>\r\n    )\r\n}\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}","// Obtiene la diferencia de años\r\nexport function obtenerDiferenciaYear(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n// Calcular el total a pagar según la marca\r\nexport function calcularMarca(marca){\r\n    let incremento;\r\n\r\n    switch(marca){\r\n\r\n        case 'europeo':\r\n            incremento= 1.30;\r\n            break;\r\n\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return incremento;\r\n}\r\n\r\n// Calcula el tipo de seguro\r\nexport function calcularPlan(plan){\r\n   return ( plan === 'basico' ) ? 1.20 : 1.50;\r\n} \r\n\r\n// Capitalizar la primera letra mayúscula\r\nexport function primeraMayuscula(texto){\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { obtenerDiferenciaYear, calcularMarca, calcularPlan } from '../helpers';\r\n\r\n// Esto es puro css con los styled components\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n    font-weight: bold; /* opcional */\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex:0 0 100px;\r\n`;\r\n \r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    /* Quita la apariencia natual de la etiqueta select */\r\n    -webkit-appearance:none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding:1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight:bold;\r\n    border:none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover{\r\n        background-color:#26C6DA;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n  color: white;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  text-align: center; \r\n  margin-bottom: 2rem;\r\n`;\r\n\r\n// Aquí empieza la lógica con React\r\nexport const Formulario = ({ guardarResumen, guardarCargando }) => {\r\n\r\n const [ datos, guardarDatos ] = useState({\r\n  marca: '',\r\n  year: '',\r\n  plan:'',\r\n });\r\n const [ error, guardarError ] = useState(false);\r\n\r\n const { marca, year, plan } = datos;\r\n\r\n//  Leer los datos del formulario y colocarlos en el state\r\n const obtenerInformacion = e => {\r\n   guardarDatos({\r\n     ...datos,\r\n    [e.target.name] : e.target.value\r\n   });\r\n  } \r\n\r\n  // Cuando el usuario presiona submit\r\n  const cotizarSeguro = e => {\r\n    e.preventDefault();\r\n\r\n    if(marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\r\n      guardarError(true);\r\n      return;\r\n    }\r\n    guardarError(false);\r\n  \r\n    let resultado = 2000;\r\n\r\n    // Obtener la diferencia en años\r\n    const diferencia = obtenerDiferenciaYear(year);\r\n\r\n    // por cada año hay que restar el 3%: 2000*diferencia/100 = r. 2000 - r\r\n    resultado -= (( diferencia * 3 ) * resultado) / 100;\r\n\r\n    // Europeo 30% // Americano 15% // Asiatico 5%\r\n    resultado = calcularMarca(marca) * resultado;\r\n    \r\n    // Básico aumenta 20% // Completo 50% //Total \r\n    const incrementoPlan = calcularPlan(plan);\r\n    \r\n    // Para obtener el resultado con 2 decimales\r\n    resultado = ( incrementoPlan * resultado ).toFixed(2);\r\n    \r\n    guardarCargando(true);\r\n\r\n    setTimeout( () => {\r\n\r\n      // Elimina al spiner\r\n     guardarCargando(false);\r\n\r\n      // Pasa información al componente principal (App)\r\n      guardarResumen({\r\n        cotizacion: Number(resultado),\r\n        datos\r\n    });\r\n    }, 2000);\r\n\r\n     \r\n  }\r\n return (\r\n    <form\r\n      onSubmit={cotizarSeguro}\r\n    >\r\n\r\n    {\r\n      error ? <Error>Todos los campos son obligatorios</Error> : null\r\n    }\r\n      <Campo>\r\n        <Label>Marca</Label>\r\n        <Select\r\n            name=\"marca\"\r\n            value={ marca }\r\n            onChange={obtenerInformacion}\r\n        >\r\n          <option value=\"\">--Seleccione--</option>\r\n          <option value=\"americano\">Americano</option>\r\n          <option value=\"europeo\">Europeo</option>\r\n          <option value=\"asiatico\">Asiático</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label>Año</Label>\r\n        <Select\r\n            name=\"year\"\r\n            value={ year }\r\n            onChange={obtenerInformacion}\r\n        >\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Campo>\r\n\r\n      <Campo>\r\n        <Label>Plan</Label>\r\n        <InputRadio\r\n         type=\"radio\"\r\n         name=\"plan\"\r\n         value=\"basico\"\r\n         checked={plan === \"basico\"}// Lo marca\r\n         onChange={obtenerInformacion}\r\n        />Básico\r\n\r\n        <InputRadio\r\n         type=\"radio\"\r\n         name=\"plan\"\r\n         value=\"completo\"\r\n         checked={plan === \"completo\"}// Lo marca\r\n         onChange={obtenerInformacion}\r\n        />Completo\r\n      </Campo>\r\n\r\n      <Boton type=\"submit\">Cotizar</Boton>  \r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nFormulario.propTypes = {\r\n  guardarCargando: PropTypes.func.isRequired, \r\n  guardarResumen: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { primeraMayuscula } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top:1rem;\r\n`;\r\n\r\nexport const Resumen = ({datos}) => {\r\n\r\n    const { marca, year, plan } = datos;\r\n\r\n    if( marca === '' || year === ''|| plan === '' ) return null;\r\n\r\n  return (\r\n    <ContenedorResumen>\r\n      <h2>Resumen de cotización</h2>\r\n      <ul>\r\n        <li>Marca: {primeraMayuscula(marca)}</li>\r\n        <li>Plan: {primeraMayuscula(plan)}</li>\r\n        <li>Año del auto: {primeraMayuscula(year)}</li>\r\n      </ul>\r\n    </ContenedorResumen>\r\n  );\r\n};\r\nResumen.propTypes = {\r\n  datos: PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Mensaje = styled.p`\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n  text-align: center;\r\n  padding: 0.5rem;\r\n  border: 1px solid #26c6da;\r\n  background-color: rgb(127, 224, 237);\r\n  margin-top: 1rem;\r\n  position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n  color: #00838f;\r\n  padding: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Resultado = ({ cotizacion }) => {\r\n  return cotizacion === 0 ? (\r\n    <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n  ) : \r\n  (\r\n    <ResultadoCotizacion>\r\n      <TransitionGroup\r\n        component=\"span\"\r\n        className=\"resultado\"\r\n      >\r\n        <CSSTransition\r\n            classNames=\"resultado\"\r\n            key={cotizacion}\r\n            timeout={{ enter: 500, exit: 500 }}\r\n        >\r\n          <TextoCotizacion>El total a pagar es:<span> ${cotizacion} </span> </TextoCotizacion>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    </ResultadoCotizacion>\r\n  );\r\n};\r\nResultado.propTypes = {\r\n  cotizacion: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport './spinner.css';\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n    <div className=\"sk-cube-grid\">\r\n        <div className=\"sk-cube sk-cube1\"></div>\r\n        <div className=\"sk-cube sk-cube2\"></div>\r\n        <div className=\"sk-cube sk-cube3\"></div>\r\n        <div className=\"sk-cube sk-cube4\"></div>\r\n        <div className=\"sk-cube sk-cube5\"></div>\r\n        <div className=\"sk-cube sk-cube6\"></div>\r\n        <div className=\"sk-cube sk-cube7\"></div>\r\n        <div className=\"sk-cube sk-cube8\"></div>\r\n        <div className=\"sk-cube sk-cube9\"></div>\r\n</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport { Header } from './components/Header';\nimport styled from '@emotion/styled';\nimport { Formulario } from './components/Formulario';\nimport { Resumen } from './components/Resumen';\nimport { Resultado } from './components/Resultado';\nimport { Spinner } from './components/Spinner';\n\n\n// Styled components\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0px auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFFFFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  const [ resumen, guardarResumen ] = useState({\n    cotizacion: 0,\n    datos:{\n      marca: '',\n      year: '',\n      plan: '',\n    }\n  });\n\n  const [ cargando, guardarCargando ] = useState(false);\n\n  // Extraer datos\n  const { datos, cotizacion } = resumen;\n\n  return (\n    <Contenedor>\n      <Header\n        titulo=\"Cotizador de Seguros\"  \n     />\n\n     <ContenedorFormulario>\n      <Formulario\n        guardarResumen={guardarResumen}\n        guardarCargando={guardarCargando}\n      />\n\n    { cargando ? <Spinner /> : null}\n\n      <Resumen\n       datos={datos} \n      />\n\n{/* Para que no se muestren las indicaciones cuando esté cargando */}\n      { !cargando ?  \n         <Resultado \n          cotizacion={cotizacion}\n        /> : null }\n\n     </ContenedorFormulario>\n     \n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}